name: "Tests"

on: [push, pull_request]

jobs:
  run-tests:
    name: PHP ${{ matrix.php-versions }}

    runs-on: ubuntu-latest
    container: ubuntu

    services:
      mailpit:
        image: axllent/mailpit
        ports:
          - 1025:1025
          - 8025:8025

    env:
      extensions: mbstring, intl, json, xdebug, phalcon-5.9.3
      key: cache-v0.0.2

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1', '8.2', '8.3', '8.4']
    steps:
      - uses: actions/checkout@v4

      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          tools: pecl

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-suggest

      - name: Setup Tests
        run: |
          cp .env.default .env

      - name: Install Mailpit and create a symbolic link to sendmail command
        run: |
          sudo curl -sL https://raw.githubusercontent.com/axllent/mailpit/develop/install.sh | sudo bash
          sudo ln -s /usr/local/bin/mailpit /usr/sbin/sendmail

      - name: Run test suites
        if: success()
        run: XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover coverage-${{ matrix.php-versions }}.xml

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./tests/_output/coverage-*.xml
